state_table <- state_table[,(colnames(state_table) %in% c('\"State \"',
'\"Hospital 30-Day Death (Mortality) Rates from Heart Attack"',
'\"Hospital 30-Day Death (Mortality) Rates from Pneumonia"',
'\"Hospital 30-Day Death (Mortality) Rates from Heart Failure"'))]
state_table <- state_table[(state_table[,1] == name), ]
state_table$`"Hospital 30-Day Death (Mortality) Rates from Heart Attack"` = as.numeric((as.character((state_table $`"Hospital 30-Day Death (Mortality) Rates from Heart Attack"`))))
state_table$`"Hospital 30-Day Death (Mortality) Rates from Heart Failure"` = as.numeric(as.character(state_table $`"Hospital 30-Day Death (Mortality) Rates from Heart Failure"`))
state_table$`"Hospital 30-Day Death (Mortality) Rates from Pneumonia"` = as.numeric(as.character(state_table $`"Hospital 30-Day Death (Mortality) Rates from Pneumonia"`))
#grep('.*Импорт', colnames(region))
max_rate_death <- c(max(na.omit(state_table[,2])), #heart attack
max(na.omit(state_table[,3])), #heart failure
max(na.omit(state_table[,4]))) #pneumonia
min_rate_death <- c(min(na.omit(state_table[,2])), #heart attack
min(na.omit(state_table[,3])), #heart failure
min(na.omit(state_table[,4]))) #pneumonia)
library(dplyr)
library(tibble)
name = "AL"
file_name = "outcome-of-care-measures.csv"
input <- data.table::fread(file_name)
removeQuotes <- function(x) gsub("\"", "", x)
input <- input%>%
mutate_if(is.character, removeQuotes)
state_table <- tibble(input)
state_table <- state_table[,(colnames(state_table) %in% c('\"State \"',
'\"Hospital 30-Day Death (Mortality) Rates from Heart Attack"',
'\"Hospital 30-Day Death (Mortality) Rates from Pneumonia"',
'\"Hospital 30-Day Death (Mortality) Rates from Heart Failure"'))]
state_table <- state_table[(state_table[,1] == name), ]
state_table$`"Hospital 30-Day Death (Mortality) Rates from Heart Attack"` = as.numeric((as.character((state_table $`"Hospital 30-Day Death (Mortality) Rates from Heart Attack"`))))
state_table$`"Hospital 30-Day Death (Mortality) Rates from Heart Failure"` = as.numeric(as.character(state_table $`"Hospital 30-Day Death (Mortality) Rates from Heart Failure"`))
state_table$`"Hospital 30-Day Death (Mortality) Rates from Pneumonia"` = as.numeric(as.character(state_table $`"Hospital 30-Day Death (Mortality) Rates from Pneumonia"`))
#grep('.*Импорт', colnames(region))
max_rate_death <- c(max(na.omit(state_table[,2])), #heart attack
max(na.omit(state_table[,3])), #heart failure
max(na.omit(state_table[,4]))) #pneumonia
min_rate_death <- c(min(na.omit(state_table[,2])), #heart attack
min(na.omit(state_table[,3])), #heart failure
min(na.omit(state_table[,4]))) #pneumonia)
library(dplyr)
library(tibble)
name = "AL"
file_name = "outcome-of-care-measures.csv"
input <- data.table::fread(file_name)
removeQuotes <- function(x) gsub("\"", "", x)
input <- input%>%
mutate_if(is.character, removeQuotes)
state_table <- tibble(input)
state_table <- state_table[,(colnames(state_table) %in% c('\"State \"',
'\"Hospital 30-Day Death (Mortality) Rates from Heart Attack"',
'\"Hospital 30-Day Death (Mortality) Rates from Pneumonia"',
'\"Hospital 30-Day Death (Mortality) Rates from Heart Failure"'))]
state_table <- state_table[(state_table[,1] == name), ]
state_table$`"Hospital 30-Day Death (Mortality) Rates from Heart Attack"` = as.numeric((as.character((state_table $`"Hospital 30-Day Death (Mortality) Rates from Heart Attack"`))))
state_table$`"Hospital 30-Day Death (Mortality) Rates from Heart Failure"` = as.numeric(as.character(state_table $`"Hospital 30-Day Death (Mortality) Rates from Heart Failure"`))
state_table$`"Hospital 30-Day Death (Mortality) Rates from Pneumonia"` = as.numeric(as.character(state_table $`"Hospital 30-Day Death (Mortality) Rates from Pneumonia"`))
max_rate_death <- c(max(na.omit(state_table[,2])), #heart attack
max(na.omit(state_table[,3])), #heart failure
max(na.omit(state_table[,4]))) #pneumonia
min_rate_death <- c(min(na.omit(state_table[,2])), #heart attack
min(na.omit(state_table[,3])), #heart failure
min(na.omit(state_table[,4]))) #pneumonia)
View(state_table)
print(state_table)
View(state_table)
View(state_table)
library(dplyr)
library(tibble)
name = "AL"
input <- data.table::fread("outcome-of-care-measures.csv")
state_table <- tibble(input)
print(state_table)
state_table <- state_table[,(colnames(state_table) %in% c('\"State \"',
'\"Hospital 30-Day Death (Mortality) Rates from Heart Attack"',
'\"Hospital 30-Day Death (Mortality) Rates from Pneumonia"',
'\"Hospital 30-Day Death (Mortality) Rates from Heart Failure"'))]
state_table <- state_table[(state_table[,1] == name), ]
library(dplyr)
library(tibble)
name = "AL"
input <- data.table::fread("outcome-of-care-measures.csv")
state_table <- tibble(input)
state_table <- state_table[,(colnames(state_table) %in% c('\"State \"',
'\"Hospital 30-Day Death (Mortality) Rates from Heart Attack"',
'\"Hospital 30-Day Death (Mortality) Rates from Pneumonia"',
'\"Hospital 30-Day Death (Mortality) Rates from Heart Failure"'))]
state_table$`"Hospital 30-Day Death (Mortality) Rates from Heart Attack"` = as.numeric((as.character((state_table $`"Hospital 30-Day Death (Mortality) Rates from Heart Attack"`))))
state_table$`"Hospital 30-Day Death (Mortality) Rates from Heart Failure"` = as.numeric(as.character(state_table $`"Hospital 30-Day Death (Mortality) Rates from Heart Failure"`))
state_table$`"Hospital 30-Day Death (Mortality) Rates from Pneumonia"` = as.numeric(as.character(state_table $`"Hospital 30-Day Death (Mortality) Rates from Pneumonia"`))
max_rate_death <- c(max(na.omit(state_table[,2])), #heart attack
max(na.omit(state_table[,3])), #heart failure
max(na.omit(state_table[,4]))) #pneumonia
min_rate_death <- c(min(na.omit(state_table[,2])), #heart attack
min(na.omit(state_table[,3])), #heart failure
min(na.omit(state_table[,4]))) #pneumonia)
library(dplyr)
library(tibble)
name = "AL"
input <- data.table::fread("outcome-of-care-measures.csv")
state_table <- tibble(input)
state_table <- state_table[,(colnames(state_table) %in% c('\"State \"',
'\"Hospital 30-Day Death (Mortality) Rates from Heart Attack"',
'\"Hospital 30-Day Death (Mortality) Rates from Pneumonia"',
'\"Hospital 30-Day Death (Mortality) Rates from Heart Failure"'))]
state_table$`"Hospital 30-Day Death (Mortality) Rates from Heart Attack"` = as.numeric((as.character((state_table $`"Hospital 30-Day Death (Mortality) Rates from Heart Attack"`))))
state_table$`"Hospital 30-Day Death (Mortality) Rates from Heart Failure"` = as.numeric(as.character(state_table $`"Hospital 30-Day Death (Mortality) Rates from Heart Failure"`))
state_table$`"Hospital 30-Day Death (Mortality) Rates from Pneumonia"` = as.numeric(as.character(state_table $`"Hospital 30-Day Death (Mortality) Rates from Pneumonia"`))
max_rate_death <- c(max(na.omit(state_table[,2])), #heart attack
max(na.omit(state_table[,3])), #heart failure
max(na.omit(state_table[,4]))) #pneumonia
library(dplyr)
library(tibble)
name = "AL"
input <- data.table::fread("outcome-of-care-measures.csv")
state_table <- tibble(input)
state_table <- state_table[,(colnames(state_table) c('\"State \"',
library(dplyr)
library(tibble)
name = "AL"
input <- data.table::fread("outcome-of-care-measures.csv")
state_table <- tibble(input)
state_table <- state_table[,(colnames(state_table) %in% c('\"State \"',
'\"Hospital 30-Day Death (Mortality) Rates from Heart Attack"',
'\"Hospital 30-Day Death (Mortality) Rates from Pneumonia"',
'\"Hospital 30-Day Death (Mortality) Rates from Heart Failure"'))]
state_table <- state_table[(state_table[,1] == name), ]
state_table$`"Hospital 30-Day Death (Mortality) Rates from Heart Attack"` = as.numeric((as.character((state_table $`"Hospital 30-Day Death (Mortality) Rates from Heart Attack"`))))
state_table$`"Hospital 30-Day Death (Mortality) Rates from Heart Failure"` = as.numeric(as.character(state_table $`"Hospital 30-Day Death (Mortality) Rates from Heart Failure"`))
state_table$`"Hospital 30-Day Death (Mortality) Rates from Pneumonia"` = as.numeric(as.character(state_table $`"Hospital 30-Day Death (Mortality) Rates from Pneumonia"`))
max_rate_death <- c(max(na.omit(state_table[,2])), #heart attack
max(na.omit(state_table[,3])), #heart failure
max(na.omit(state_table[,4]))) #pneumonia
min_rate_death <- c(min(na.omit(state_table[,2])), #heart attack
min(na.omit(state_table[,3])), #heart failure
min(na.omit(state_table[,4]))) #pneumonia)
GetInfo <- function(state) {
# Загрузим данные
data <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
# Выберем данные по штату
state <-data[which(data$State == state),]
# Уровень смертности от инфаркта, находим минимум и максимум, не учитывая при этом нечисловые значения
HeartAttackMortality<- state[,"Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack"]
HeartAttackMortality <- lapply(HeartAttackMortality, function(x) gsub("[^0-9.-]", NA, x))
HeartAttackMortality <- lapply(HeartAttackMortality, function(x) as.numeric(x))
HeartAttackMortality <- HeartAttackMortality[!is.na(HeartAttackMortality)]
HAmin <- min(unlist(HeartAttackMortality), na.rm=TRUE)
HAmax <- max(unlist(HeartAttackMortality), na.rm=TRUE)
# Уровень смертности от остановки сердца, находим минимум и максимум, не учитывая при этом нечисловые значения
HeartFailureMortality<- state[,"Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure"]
HeartFailureMortality <- lapply(HeartFailureMortality, function(x) gsub("[^0-9.-]", NA, x))
HeartFailureMortality <- lapply(HeartFailureMortality, function(x) as.numeric(x))
HeartFailureMortality <- HeartFailureMortality[!is.na(HeartFailureMortality)]
HFmin <- min(unlist(HeartFailureMortality), na.rm=TRUE)
HFmax <- max(unlist(HeartFailureMortality), na.rm=TRUE)
# Уровень смертности от пневмонии, находим минимум и максимум, не учитывая при этом нечисловые значения
PneumoniaMortality<-state[,"Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia",]
PneumoniaMortality <- lapply(PneumoniaMortality, function(x) gsub("[^0-9.-]", NA, x))
PneumoniaMortality <- lapply(PneumoniaMortality, function(x) as.numeric(x))
PneumoniaMortality <- PneumoniaMortality[!is.na(PneumoniaMortality)]
Pmin <- min(unlist(PneumoniaMortality), na.rm=TRUE)
Pmax <-max(unlist(PneumoniaMortality), na.rm=TRUE)
# Находим число больниц в штате
Hcount <- length(unique(state$Hospital.Name))
# Все эти значения добавим в список
values <- list(HAmin, HAmax, HFmin,HFmax,Pmin,Pmax, Hcount)
names(values) <- c("Heart Attack Mortality Min", "Heart Attack Mortality Max", "Heart Failure Mortality Min", "Heart Failure Mortality Max", "Pneumonia Mortality Min", "Pneumonia Mortality Max", "Hospital Count")
return(values)
}
state <- "CA"
GetInfo(state)
GetInfo <- function(state) {
# Загрузим данные
data <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
# Выберем данные по штату
state <-data[which(data$State == state),]
# Уровень смертности от инфаркта, находим минимум и максимум, не учитывая при этом нечисловые значения
HeartAttackMortality<- state[,"Hospital 30-Day Death (Mortality) Rates from Heart Attack"]
HeartAttackMortality <- lapply(HeartAttackMortality, function(x) gsub("[^0-9.-]", NA, x))
HeartAttackMortality <- lapply(HeartAttackMortality, function(x) as.numeric(x))
HeartAttackMortality <- HeartAttackMortality[!is.na(HeartAttackMortality)]
HAmin <- min(unlist(HeartAttackMortality), na.rm=TRUE)
HAmax <- max(unlist(HeartAttackMortality), na.rm=TRUE)
# Уровень смертности от остановки сердца, находим минимум и максимум, не учитывая при этом нечисловые значения
HeartFailureMortality<- state[,"Hospital 30-Day Death (Mortality) Rates from Heart Failure"]
HeartFailureMortality <- lapply(HeartFailureMortality, function(x) gsub("[^0-9.-]", NA, x))
HeartFailureMortality <- lapply(HeartFailureMortality, function(x) as.numeric(x))
HeartFailureMortality <- HeartFailureMortality[!is.na(HeartFailureMortality)]
HFmin <- min(unlist(HeartFailureMortality), na.rm=TRUE)
HFmax <- max(unlist(HeartFailureMortality), na.rm=TRUE)
# Уровень смертности от пневмонии, находим минимум и максимум, не учитывая при этом нечисловые значения
PneumoniaMortality<-state[,"Hospital 30-Day Death (Mortality) Rates from Pneumonia",]
PneumoniaMortality <- lapply(PneumoniaMortality, function(x) gsub("[^0-9.-]", NA, x))
PneumoniaMortality <- lapply(PneumoniaMortality, function(x) as.numeric(x))
PneumoniaMortality <- PneumoniaMortality[!is.na(PneumoniaMortality)]
Pmin <- min(unlist(PneumoniaMortality), na.rm=TRUE)
Pmax <-max(unlist(PneumoniaMortality), na.rm=TRUE)
# Находим число больниц в штате
Hcount <- length(unique(state$Hospital.Name))
# Все эти значения добавим в список
values <- list(HAmin, HAmax, HFmin,HFmax,Pmin,Pmax, Hcount)
names(values) <- c("Heart Attack Mortality Min", "Heart Attack Mortality Max", "Heart Failure Mortality Min", "Heart Failure Mortality Max", "Pneumonia Mortality Min", "Pneumonia Mortality Max", "Hospital Count")
return(values)
}
state <- "CA"
GetInfo(state)
GetInfo <- function(state) {
# Загрузим данные
data <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
# Выберем данные по штату
state <-data[which(data$State == state),]
# Уровень смертности от инфаркта, находим минимум и максимум, не учитывая при этом нечисловые значения
HeartAttackMortality<- state[,"Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack"]
HeartAttackMortality <- lapply(HeartAttackMortality, function(x) gsub("[^0-9.-]", NA, x))
HeartAttackMortality <- lapply(HeartAttackMortality, function(x) as.numeric(x))
HeartAttackMortality <- HeartAttackMortality[!is.na(HeartAttackMortality)]
HAmin <- min(unlist(HeartAttackMortality), na.rm=TRUE)
HAmax <- max(unlist(HeartAttackMortality), na.rm=TRUE)
# Уровень смертности от остановки сердца, находим минимум и максимум, не учитывая при этом нечисловые значения
HeartFailureMortality<- state[,"Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure"]
HeartFailureMortality <- lapply(HeartFailureMortality, function(x) gsub("[^0-9.-]", NA, x))
HeartFailureMortality <- lapply(HeartFailureMortality, function(x) as.numeric(x))
HeartFailureMortality <- HeartFailureMortality[!is.na(HeartFailureMortality)]
HFmin <- min(unlist(HeartFailureMortality), na.rm=TRUE)
HFmax <- max(unlist(HeartFailureMortality), na.rm=TRUE)
# Уровень смертности от пневмонии, находим минимум и максимум, не учитывая при этом нечисловые значения
PneumoniaMortality<-state[,"Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia",]
PneumoniaMortality <- lapply(PneumoniaMortality, function(x) gsub("[^0-9.-]", NA, x))
PneumoniaMortality <- lapply(PneumoniaMortality, function(x) as.numeric(x))
PneumoniaMortality <- PneumoniaMortality[!is.na(PneumoniaMortality)]
Pmin <- min(unlist(PneumoniaMortality), na.rm=TRUE)
Pmax <-max(unlist(PneumoniaMortality), na.rm=TRUE)
# Находим число больниц в штате
Hcount <- length(unique(state$Hospital.Name))
# Все эти значения добавим в список
values <- list(HAmin, HAmax, HFmin,HFmax,Pmin,Pmax, Hcount)
names(values) <- c("Heart Attack Mortality Min", "Heart Attack Mortality Max", "Heart Failure Mortality Min", "Heart Failure Mortality Max", "Pneumonia Mortality Min", "Pneumonia Mortality Max", "Hospital Count")
return(values)
}
state <- "CA"
GetInfo(state)
state <- "LA"
GetInfo(state)
GetInfo <- function(state) {
data <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
state <-data[which(data$State == state),]
HeartAttackMortality<- state[,"Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack"]
HeartAttackMortality <- lapply(HeartAttackMortality, function(x) gsub("[^0-9.-]", NA, x))
HeartAttackMortality <- lapply(HeartAttackMortality, function(x) as.numeric(x))
HeartAttackMortality <- HeartAttackMortality[!is.na(HeartAttackMortality)]
HeartAttackMin <- min(unlist(HeartAttackMortality), na.rm=TRUE)
HeartAttacMax <- max(unlist(HeartAttackMortality), na.rm=TRUE)
HeartFailureMortality<- state[,"Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure"]
HeartFailureMortality <- lapply(HeartFailureMortality, function(x) gsub("[^0-9.-]", NA, x))
HeartFailureMortality <- lapply(HeartFailureMortality, function(x) as.numeric(x))
HeartFailureMortality <- HeartFailureMortality[!is.na(HeartFailureMortality)]
HeartFailureMin <- min(unlist(HeartFailureMortality), na.rm=TRUE)
HeartFailureMax <- max(unlist(HeartFailureMortality), na.rm=TRUE)
PneumoniaMortality<-state[,"Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia",]
PneumoniaMortality <- lapply(PneumoniaMortality, function(x) gsub("[^0-9.-]", NA, x))
PneumoniaMortality <- lapply(PneumoniaMortality, function(x) as.numeric(x))
PneumoniaMortality <- PneumoniaMortality[!is.na(PneumoniaMortality)]
PneumoniaMin <- min(unlist(PneumoniaMortality), na.rm=TRUE)
PneumoniaMax <-max(unlist(PneumoniaMortality), na.rm=TRUE)
Hcount <- length(unique(state$Hospital.Name))
values <- list(HeartAttackMin, HeartAttacMax, HeartFailureMin,HeartFailureMax,PneumoniaMin,PneumoniaMax, Hcount)
names(values) <- c("Heart Attack Mortality Min", "Heart Attack Mortality Max", "Heart Failure Mortality Min", "Heart Failure Mortality Max", "Pneumonia Mortality Min", "Pneumonia Mortality Max", "Hospital Count")
return(values)
}
state <- "LA"
GetInfo(state)
state <- "LA"
StateInfo(state)
StateInfo <- function(state) {
data <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
state <-data[which(data$State == state),]
HeartAttackMort<- state[,"Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack"]
HeartAttackMort <- lapply(HeartAttackMort, function(x) gsub("[^0-9.-]", NA, x))
HeartAttackMort <- lapply(HeartAttackMort, function(x) as.numeric(x))
HeartAttackMort <- HeartAttackMort[!is.na(HeartAttackMort)]
HeartAttackMin <- min(unlist(HeartAttackMort), na.rm=TRUE)
HeartAttacMax <- max(unlist(HeartAttackMort), na.rm=TRUE)
HeartFailureMort<- state[,"Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure"]
HeartFailureMort <- lapply(HeartFailureMort, function(x) gsub("[^0-9.-]", NA, x))
HeartFailureMort <- lapply(HeartFailureMort, function(x) as.numeric(x))
HeartFailureMort <- HeartFailureMort[!is.na(HeartFailureMort)]
HeartFailureMin <- min(unlist(HeartFailureMort), na.rm=TRUE)
HeartFailureMax <- max(unlist(HeartFailureMort), na.rm=TRUE)
PneumoniaMort<-state[,"Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia",]
PneumoniaMort <- lapply(PneumoniaMort, function(x) gsub("[^0-8.-]", NA, x))
PneumoniaMort <- lapply(PneumoniaMort, function(x) as.numeric(x))
PneumoniaMort <- PneumoniaMort[!is.na(PneumoniaMort)]
PneumoniaMin <- min(unlist(PneumoniaMort), na.rm=TRUE)
PneumoniaMax <-max(unlist(PneumoniaMort), na.rm=TRUE)
Hcount <- length(unique(state$Hospital.Name))
values <- list(HeartAttackMin, HeartAttacMax, HeartFailureMin,HeartFailureMax,PneumoniaMin,PneumoniaMax, Hcount)
names(values) <- c("Heart Attack Mortality Min", "Heart Attack Mortality Max", "Heart Failure Mortality Min", "Heart Failure Mortality Max", "Pneumonia Mortality Min", "Pneumonia Mortality Max", "Hospital Count")
return(values)
}
state <- "LA"
StateInfo(state)
StateInfo <- function(state) {
data <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
state <-data[which(data$State == state),]
HeartAttackMort<- state[,"Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack"]
HeartAttackMort <- lapply(HeartAttackMort, function(x) gsub("[^0-9.-]", NA, x))
HeartAttackMort <- lapply(HeartAttackMort, function(x) as.numeric(x))
HeartAttackMort <- HeartAttackMort[!is.na(HeartAttackMort)]
HeartAttackMin <- min(unlist(HeartAttackMort), na.rm=TRUE)
HeartAttacMax <- max(unlist(HeartAttackMort), na.rm=TRUE)
HeartFailureMort<- state[,"Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure"]
HeartFailureMort <- lapply(HeartFailureMort, function(x) gsub("[^0-9.-]", NA, x))
HeartFailureMort <- lapply(HeartFailureMort, function(x) as.numeric(x))
HeartFailureMort <- HeartFailureMort[!is.na(HeartFailureMort)]
HeartFailureMin <- min(unlist(HeartFailureMort), na.rm=TRUE)
HeartFailureMax <- max(unlist(HeartFailureMort), na.rm=TRUE)
PneumoniaMort<-state[,"Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia",]
PneumoniaMort <- lapply(PneumoniaMort, function(x))
state <- "LA"
StateInfo <- function(state) {
data <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
state <-data[which(data$State == state),]
HeartAttackMort<- state[,"Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack"]
HeartAttackMort <- lapply(HeartAttackMort, function(x) gsub("[^0-9.-]", NA, x))
HeartAttackMort <- lapply(HeartAttackMort, function(x) as.numeric(x))
HeartAttackMort <- HeartAttackMort[!is.na(HeartAttackMort)]
HeartAttackMin <- min(unlist(HeartAttackMort), na.rm=TRUE)
HeartAttacMax <- max(unlist(HeartAttackMort), na.rm=TRUE)
HeartFailureMort<- state[,"Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure"]
HeartFailureMort <- lapply(HeartFailureMort, function(x) gsub("[^0-9.-]", NA, x))
HeartFailureMort <- lapply(HeartFailureMort, function(x) as.numeric(x))
HeartFailureMort <- HeartFailureMort[!is.na(HeartFailureMort)]
HeartFailureMin <- min(unlist(HeartFailureMort), na.rm=TRUE)
HeartFailureMax <- max(unlist(HeartFailureMort), na.rm=TRUE)
PneumoniaMort<-state[,"Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia",]
PneumoniaMort <- lapply(PneumoniaMort, function(x) gsub("[^0-8.-]", NA, x))
PneumoniaMort <- lapply(PneumoniaMort, function(x) as.numeric(x))
PneumoniaMort <- PneumoniaMort[!is.na(PneumoniaMort)]
PneumoniaMin <- min(unlist(PneumoniaMort), na.rm=TRUE)
PneumoniaMax <-max(unlist(PneumoniaMort), na.rm=TRUE)
Hcount <- length(unique(state$Hospital.Name))
values <- list(HeartAttackMin, HeartAttacMax, HeartFailureMin,HeartFailureMax,PneumoniaMin,PneumoniaMax, Hcount)
names(values) <- c("Heart Attack Mortality Min", "Heart Attack Mortality Max", "Heart Failure Mortality Min",
"Heart Failure Mortality Max", "Pneumonia Mortality Min", "Pneumonia Mortality Max", "Hospital Count")
return(values)
}
state <- "LA"
StateInfo(state)
modificationOfData <- function() {
new_tmp <- ExpImp
for (i in 2:ncol(new_tmp)) {
str <- new_tmp[[i]]
for (j in seq_along(str)) {
if (is.na(str[j])) {
new_tmp[[i]][j] <- 0
} else if (str[j] == "-") {
new_tmp[[i]][j] <- 0
}
new_tmp[[i]] <- as.numeric(new_tmp[[i]])
}
}
data_col_imp <- new_tmp[, grepl("Импорт", colnames(new_tmp))]
data_col_exp <- new_tmp[, grepl("Экспорт", colnames(new_tmp))]
tmp <- cbind(new_tmp[, 1], data_col_exp)
full_table <- cbind(tmp, data_col_imp)
full_table['СуммаИмпорта'] <- rowSums(data_col_imp, na.rm = TRUE)
full_table['СуммаЭкспорта'] <- rowSums(data_col_exp, na.rm = TRUE)
return(full_table)
}
load("ExpImp.RData")
expimp <- modificationOfData()
print(expimp)
filtrationOfData <- function(data) {
rows <- which(data$СуммаЭкспорта > data$СуммаИмпорта)
return(data[rows, 1])
}
data <- filtrationOfData(expimp)
print(data)
StateInfo <- function(state) {
data <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
state <-data[which(data$State == state),]
HeartAttackMort<- state[,"Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack"]
HeartAttackMort <- lapply(HeartAttackMort, function(x) gsub("[^0-9.-]", NA, x))
HeartAttackMort <- lapply(HeartAttackMort, function(x) as.numeric(x))
HeartAttackMort <- HeartAttackMort[!is.na(HeartAttackMort)]
HeartAttackMin <- min(unlist(HeartAttackMort), na.rm=TRUE)
HeartAttacMax <- max(unlist(HeartAttackMort), na.rm=TRUE)
HeartFailureMort<- state[,"Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure"]
HeartFailureMort <- lapply(HeartFailureMort, function(x) gsub("[^0-9.-]", NA, x))
HeartFailureMort <- lapply(HeartFailureMort, function(x) as.numeric(x))
HeartFailureMort <- HeartFailureMort[!is.na(HeartFailureMort)]
HeartFailureMin <- min(unlist(HeartFailureMort), na.rm=TRUE)
HeartFailureMax <- max(unlist(HeartFailureMort), na.rm=TRUE)
PneumoniaMort<-state[,"Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia",]
PneumoniaMort <- lapply(PneumoniaMort, function(x) gsub("[^0-8.-]", NA, x))
PneumoniaMort <- lapply(PneumoniaMort, function(x) as.numeric(x))
PneumoniaMort <- PneumoniaMort[!is.na(PneumoniaMort)]
PneumoniaMin <- min(unlist(PneumoniaMort), na.rm=TRUE)
PneumoniaMax <-max(unlist(PneumoniaMort), na.rm=TRUE)
Hcount <- length(unique(state$Hospital.Name))
values <- list(HeartAttackMin, HeartAttacMax, HeartFailureMin,HeartFailureMax,PneumoniaMin,PneumoniaMax, Hcount)
names(values) <- c("Heart Attack Mortality Min", "Heart Attack Mortality Max", "Heart Failure Mortality Min",
"Heart Failure Mortality Max", "Pneumonia Mortality Min", "Pneumonia Mortality Max", "Hospital Count")
return(values)
}
state <- "LA"
StateInfo(state)
knitr::opts_chunk$set(echo = TRUE)
modificationOfData <- function() {
new_tmp <- ExpImp
for (i in 2:ncol(new_tmp)) {
str <- new_tmp[[i]]
for (j in seq_along(str)) {
if (is.na(str[j])) {
new_tmp[[i]][j] <- 0
}
else if (str[j] == "-") {
new_tmp[[i]][j] <- 0
}
new_tmp[[i]] <- as.numeric(new_tmp[[i]])
}
}
dataImportCol <- new_tmp[, grepl("Импорт", colnames(new_tmp))]
dataExportCol <- new_tmp[, grepl("Экспорт", colnames(new_tmp))]
tmp <- cbind(new_tmp[, 1], dataExportCol)
fullTable <- cbind(tmp, dataImportCol)
fullTable['СуммаИмпорта'] <- rowSums(dataImportCol, na.rm = TRUE)
fullTable['СуммаЭкспорта'] <- rowSums(dataExportCol, na.rm = TRUE)
return(fullTable)
}
load("ExpImp.RData")
expimp <- modificationOfData()
print(expimp)
load("ExpImp.RData")
expimp <- modificationOfData()
print(expimp)
knitr::opts_chunk$set(echo = TRUE)
modificationOfData <- function() {
new_tmp <- ExpImp
for (i in 2:ncol(new_tmp)) {
str <- new_tmp[[i]]
for (j in seq_along(str)) {
if (is.na(str[j])) {
new_tmp[[i]][j] <- 0
}
else if (str[j] == "-") {
new_tmp[[i]][j] <- 0
}
new_tmp[[i]] <- as.numeric(new_tmp[[i]])
}
}
dataImportCol <- new_tmp[, grepl("Импорт", colnames(new_tmp))]
dataExportCol <- new_tmp[, grepl("Экспорт", colnames(new_tmp))]
tmp <- cbind(new_tmp[, 1], dataExportCol)
fullTable <- cbind(tmp, dataImportCol)
fullTable['СуммаИмпорта'] <- rowSums(dataImportCol, na.rm = TRUE)
fullTable['СуммаЭкспорта'] <- rowSums(dataExportCol, na.rm = TRUE)
return(fullTable)
}
filtrationOfData <- function(data) {
rows <- which(data$СуммаЭкспорта > data$СуммаИмпорта)
return(data[rows, 1])
}
load("ExpImp.RData")
sortedData <- modificationOfData()
print(sortedData)
data <- filtrationOfData(sortedData)
print(data)
filtrationOfData <- function(data) {
rows <- which(data$СуммаЭкспорта > data$СуммаИмпорта)
return(data[rows, 0])
}
data <- filtrationOfData(sortedData)
print(data)
filtrationOfData <- function(data) {
rows <- which(data$СуммаЭкспорта > data$СуммаИмпорта)
return(data[rows, 1])
}
data <- filtrationOfData(sortedData)
print(data)
StateInfo <- function(state) {
data <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
state <-data[which(data$State == state),]
# Число больниц в штате
HospitalCount <- length(unique(state$Hospital.Name))
# Смертность от инфаркта
HeartAttackMort<- state[,"Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack"]
HeartAttackMort <- lapply(HeartAttackMort, function(x) gsub("[^0-9.-]", NA, x))
HeartAttackMort <- lapply(HeartAttackMort, function(x) as.numeric(x))
HeartAttackMort <- HeartAttackMort[!is.na(HeartAttackMort)]
HeartAttackMin <- min(unlist(HeartAttackMort), na.rm=TRUE)
HeartAttacMax <- max(unlist(HeartAttackMort), na.rm=TRUE)
# Смертность от остановки сердца
HeartFailureMort<- state[,"Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure"]
HeartFailureMort <- lapply(HeartFailureMort, function(x) gsub("[^0-9.-]", NA, x))
HeartFailureMort <- lapply(HeartFailureMort, function(x) as.numeric(x))
HeartFailureMort <- HeartFailureMort[!is.na(HeartFailureMort)]
HeartFailureMin <- min(unlist(HeartFailureMort), na.rm=TRUE)
HeartFailureMax <- max(unlist(HeartFailureMort), na.rm=TRUE)
# Смертность от пневмонии
PneumoniaMort<-state[,"Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia",]
PneumoniaMort <- lapply(PneumoniaMort, function(x) gsub("[^0-8.-]", NA, x))
PneumoniaMort <- lapply(PneumoniaMort, function(x) as.numeric(x))
PneumoniaMort <- PneumoniaMort[!is.na(PneumoniaMort)]
PneumoniaMin <- min(unlist(PneumoniaMort), na.rm=TRUE)
PneumoniaMax <-max(unlist(PneumoniaMort), na.rm=TRUE)
values <- list(HeartAttackMin, HeartAttacMax, HeartFailureMin,HeartFailureMax,PneumoniaMin,PneumoniaMax, HospitalCount)
names(values) <- c("Heart Attack Mortality Min", "Heart Attack Mortality Max", "Heart Failure Mortality Min",
"Heart Failure Mortality Max", "Pneumonia Mortality Min", "Pneumonia Mortality Max", "Hospital Count")
return(values)
}
state <- "LA"
StateInfo(state)
